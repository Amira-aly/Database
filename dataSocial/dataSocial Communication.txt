CREATE DATABASE socialCommunication;

CREATE TABLE users(
    id bigint(20) PRIMARY KEY,
    firstName varchar(50),
    middleName varchar(50),
    lastName varchar(50),
    userName varchar(50) NOT NULL,
    mobile varchar(15) NOT NULL,
    email varchar(50) NOT NULL,
    passwordHash varchar(32),
    registered_At datetime,
    lastLogin datetime,
    intro tinytext ,
    profilee text,
    UNIQUE(userName , mobile , email )
);

CREATE TABLE user_message(
    id bigint(20) PRIMARY KEY,
    sourceId bigint(20),
    targetId bigint(20),
    messanger tinytext,
    creatAt datetime,
    updateAt datetime,
    FOREIGN KEY (sourceId) REFERENCES users(id),
    FOREIGN KEY (targetId) REFERENCES users(id)
);

CREATE TABLE user_post(
    id bigint(20) PRIMARY KEY ,
    userId bigint(20),
    senderId bigint(20),
    message tinytext,
    createAt datetime ,
    updateAt datetime ,
    FOREIGN KEY (userId) REFERENCES users(id),
    FOREIGN KEY (senderId) REFERENCES users(id)
);

CREATE TABLE user_follower(
    id bigint(20) PRIMARY KEY,
    sourceId bigint(20) NOT NULL,
    targetId bigint(20) NOT NULL,
    type smallint(6) NOT NULL,
    createAt datetime ,
    updateAt datetime ,
    FOREIGN KEY (sourceId) REFERENCES users(id),
    FOREIGN KEY (targetId) REFERENCES users(id),
    UNIQUE(sourceId , targetId , type )
);

CREATE TABLE user_friend(
    id bigint(20) PRIMARY KEY,
    sourceId bigint(20) NOT NULL,
    targetId bigint (20) NOT NULL,
    type smallint(6),
    statuss smallint(6) ,
    createAt datetime,
    updateAt datetime ,
    notes text,
    FOREIGN KEY (sourceId) REFERENCES users(id),
    FOREIGN KEY (targetId) REFERENCES users(id),
    UNIQUE(sourceId , targetId )
);

CREATE TABLE groups(
    id bigint(20) PRIMARY KEY ,
    createBy bigint(20) ,
    updateBy bigint(20) ,
    title varchar(75),
    metaTitle varchar(100),
    slug varchar(100) NOT NULL ,
    summary tinytext ,
    statuss smallint(6),
    createAt datetime,
    updateAt datetime,
    profilee text,
    content text,
    FOREIGN KEY (createBy) REFERENCES users(id),
    FOREIGN KEY (updateBy) REFERENCES users(id),
    UNIQUE(slug )
);

CREATE TABLE group_message(
    id bigint(20) PRIMARY KEY ,
    groupId bigint(20) ,
    userId bigint(20) ,
    message tinytext,
    createAt datetime ,
    updateAt datetime ,
    FOREIGN KEY (groupId) REFERENCES groups(id),
    FOREIGN KEY (userId) REFERENCES users(id)
);

CREATE TABLE group_follower(
    id bigint(20) PRIMARY KEY ,
    groupId bigint(20) NOT NULL,
    userId bigint(20) NOT NULL,
    type smallint(6) NOT NULL ,
    createAt datetime ,
    updateAt datetime,
    FOREIGN KEY (groupId) REFERENCES groups(id),
    FOREIGN KEY (userId) REFERENCES users(id),
    UNIQUE(groupId,userId,type)
);

CREATE TABLE group_member(
    id bigint(20) PRIMARY KEY ,
    groupId bigint(20) NOT NULL,
    userId bigint(20) NOT NULL,
    type smallint(6),
    statuss smallint(6),
    createAt datetime,
    updateAt datetime,
    notes text,
    FOREIGN KEY (groupId) REFERENCES groups(id),
    FOREIGN KEY (userId) REFERENCES users(id),
    UNIQUE(groupId,userId)
);

CREATE TABLE group_post(
    id bigint(20) PRIMARY KEY,
    groupId bigint(20) ,
    userId bigint(20) ,
    message tinytext,
    createAt datetime,
    updateAt datetime,
    FOREIGN KEY (groupId) REFERENCES groups(id),
    FOREIGN KEY (userId) REFERENCES users(id)
);

CREATE TABLE group_meta(
    id bigint(20) PRIMARY KEY ,
    groupId bigint(20) NOT NULL,
    keyy varchar(50) NOT NULL,
    content text,
    FOREIGN KEY (groupId) REFERENCES groups(id),
    UNIQUE(groupId , keyy)
);